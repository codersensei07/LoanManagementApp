module Test.LoanRequestTest where

-- Test Script - Implement a DAML test script that simulates the loan request and approval workflow.
-- a) A `LoanRequest` contract can be created by the borrower.
-- b) The bank can approve the `LoanRequest` using the `ApproveRequest` choice.
-- c) Upon approval, the `LoanRequest` contract is archived.
-- d) A new `Loan` contract is created with the borrower and bank as signatories.


import Daml.Script
import Main.LoanRequest.LoanRequest
import Main.Loan.Loan
import Main.Loan.LoanLimit
import Main.Utils.Utils


testLoanWorkflow : Script ()

testLoanWorkflow = script do

  -- Step 1) Create parties
  borrower <- allocatePartyWithHint "JohnDoe" (PartyIdHint "JohnDoe")
  bank <- allocatePartyWithHint "GSBank" (PartyIdHint "GSBank")

  now <- getTime

  -- Step 2) Create a LoanLimit for the bank
  loanLimitCid <- submit bank do
    createCmd LoanLimit with
      bank
      loanAmountLimit = 200000.0
      loanAmountUsed = 0.0

  -- Step 3) Borrower submits a LoanRequest
  loanReqCid <- submit borrower do
    createCmd LoanRequest
      with
        id = LoanRequestKey with customer = borrower, customerId = "CUST-1", loanRequestId = "LR-1"
        borrower = borrower
        bank = bank
        borrowerAccountId = AccountId with accountOperator = borrower, accountNumber = "123456789"
        loanRequestId = "LR-1"
        loanAmount = 100000.0
        loanTerm = 12
        requestDate = now

  -- Step 4) Bank approves the LoanRequest
  (loanCid, _) <- submit bank do
    exerciseCmd loanReqCid (ApproveRequest with loanLimitContractId = loanLimitCid)

  -- Step 5) Verify that the Loan contract is created
  someLoan <- queryContractId @Loan loanCid
  debug ("Loan contract created with ID: " <> show loanCid)
  pure ()
